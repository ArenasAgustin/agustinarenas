---
interface Props {
  type?: number;
  name?: string;
}

const { type, name } = Astro.props;
let glowType = "";

switch (type) {
  case 1:
    glowType =
      "after:skew-x-0 after:md:skew-x-12 after:from-tradewind-200 after:to-tradewind-800 before:skew-x-0 before:md:skew-x-12 before:from-tradewind-200 before:to-tradewind-800";
    break;
  case 2:
    glowType =
      "after:skew-x-0 after:md:skew-x-12 after:from-tradewind-300 after:to-tradewind-900 before:skew-x-0 before:md:skew-x-12 before:from-tradewind-300 before:to-tradewind-900";
    break;
  case 3:
    glowType =
      "after:skew-x-0 after:md:skew-x-12 after:from-tradewind-400 after:to-tradewind-900 before:skew-x-0 before:md:skew-x-12 before:from-tradewind-400 before:to-tradewind-900";
    break;
  case 4:
    glowType =
      "after:-skew-x-0 after:md:-skew-x-12 after:from-tradewind-200 after:to-tradewind-800 before:-skew-x-0 before:md:-skew-x-12 before:from-tradewind-200 before:to-tradewind-800";
    break;
  case 5:
    glowType =
      "after:-skew-x-0 after:md:-skew-x-12 after:from-tradewind-300 after:to-tradewind-900 before:-skew-x-0 before:md:-skew-x-12 before:from-tradewind-300 before:to-tradewind-900";
    break;
  case 6:
    glowType =
      "after:-skew-x-0 after:md:-skew-x-12 after:from-tradewind-400 after:to-tradewind-900 before:-skew-x-0 before:md:-skew-x-12 before:from-tradewind-400 before:to-tradewind-900";
    break;
  default:
    glowType =
      "after:skew-x-0 after:md:skew-x-12 after:from-tradewind-200 after:to-tradewind-800 before:skew-x-0 before:md:skew-x-12 before:from-tradewind-200 before:to-tradewind-800";
    break;
}
---

<div
  class={`relative z-10 glow-after glow-before ${glowType} `}
  transition:name={name ? name : ""}
>
  <div
    class="rounded-lg flex-center-center flex-col glow-bg-md p-8 m-5 text-mine-shaft-900 dark:text-mine-shaft-100"
  >
    <slot />
  </div>
</div>
